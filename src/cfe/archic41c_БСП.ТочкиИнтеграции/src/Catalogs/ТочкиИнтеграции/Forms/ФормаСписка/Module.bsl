#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТИ_ОбщегоНазначения.ПриСозданииНаСервереФормыВыбора(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПараметрыОтбора = Новый Соответствие();
	УстановитьОтборСписка(Список, ПараметрыОтбора);	
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	УстановитьОтборСписка(Список, Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ИнформационнаяСистемаПриИзменении(Элемент)
	
	ПараметрыОтбора = Новый Соответствие;
	ПараметрыОтбора.Вставить("ИнформационнаяСистема", ИнформационнаяСистема);
	
	УстановитьОтборСписка(Список, ПараметрыОтбора);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСписка(Список, ПараметрыОтбора)
	
	// ИнформационнаяСистема 
	ИнформационнаяСистема = ПараметрыОтбора.Получить("ИнформационнаяСистема");
	Если ИнформационнаяСистема <> Неопределено Тогда 
		
		Если Не ЗначениеЗаполнено(ИнформационнаяСистема) Тогда
			
			ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор,
				"ИнформационнаяСистемаТИ");
			
		Иначе		
			
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(Список.Отбор,
				"ИнформационнаяСистемаТИ",
				ИнформационнаяСистема,
				ВидСравненияКомпоновкиДанных.Равно);
				
		КонецЕсли;
			
	КонецЕсли;
	
КонецПроцедуры


#КонецОбласти