
#Область ОбработчикиСобытийЭлементовТаблицыФормыСписокТочекИнтеграции

&НаКлиенте
Процедура СписокТочекИнтеграцииИнициаторОбменаПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.СписокТочекИнтеграции.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.ИнициаторОбмена = Объект.Приемник Тогда
		
		// Направление потока данных может быть только "К инициатору" или "В оба направления" для приемника.
		ТекущиеДанные.НаправлениеПотокаДанных = ПредопределенноеЗначение("Перечисление.НаправленияПотокаДанных.КИнициатору");
				
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовТаблицыФормыФункционал

&НаКлиенте
Процедура ФункционалГотоваПриИзменении(Элемент)
	
	ТекущиеДанные = Элементы.Функционал.ТекущиеДанные;
	
	Если ТекущиеДанные = Неопределено Тогда
		Возврат;
	КонецЕсли;
	
	Если ТекущиеДанные.Готова
		И ТекущиеДанные.СтатусИнтеграции <> ПредопределенноеЗначение("Перечисление.СтатусыИнтеграции.Работает") Тогда
		ТекущиеДанные.СтатусИнтеграции = ПредопределенноеЗначение("Перечисление.СтатусыИнтеграции.Разработана");	
	КонецЕсли;
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиКомандФормы

&НаКлиенте
Процедура СгенерироватьДиаграмму(Команда)
	
	СгенерироватьДиаграммуСервер();	
	
КонецПроцедуры

&НаКлиенте
Процедура РасширенноеРедактированиеДиаграммы(Команда)
	
	ИсходныйКод = СформироватьИсходныйКодДиаграммыНаСервере();
	ПараметрыФормы = Новый Структура("ИсходныйКод", ИсходныйКод);
	
	ОткрытьФорму("Обработка.ГенерацияUMLДиаграмм.Форма.Форма", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаСервере
Процедура СгенерироватьДиаграммуСервер()

	ГенерацияUMLДиаграмм = Обработки.ГенерацияUMLДиаграмм.Создать();
	
	ИсходныйКод = СформироватьИсходныйКодДиаграммыНаСервере();
	
	ПараметрыПоУмолчанию = ГенерацияUMLДиаграмм.ПараметрыПоУмолчанию();
	ЗаполнитьЗначенияСвойств(ПараметрыПоУмолчанию, ЭтотОбъект);
	
	Результат = ГенерацияUMLДиаграмм.СгенерированноеИзображение(ИсходныйКод, ПараметрыПоУмолчанию);
	
	Если ЗначениеЗаполнено(Результат.АдресИзображения) Тогда
	 	РезультатОбработкиUML = Результат.АдресИзображения;
	КонецЕсли; 

КонецПроцедуры 

&НаСервере
Функция СформироватьИсходныйКодДиаграммыНаСервере()
	
	ПараметрыИнтеграции = ТочкиИнтеграцииМоделиС4.ПараметрыДиаграммыИнтеграции();
	ЗаполнитьЗначенияСвойств(ПараметрыИнтеграции, Объект, "Ссылка, Источник, Приемник");
	ПараметрыИнтеграции.СписокТочекИнтеграции = Объект.СписокТочекИнтеграции.Выгрузить();
	
	МассивИнтеграций = Новый Массив;
	МассивИнтеграций.Добавить(ПараметрыИнтеграции);
	
	ИсходныйКод = ТочкиИнтеграцииМоделиС4.СформироватьКодДиаграммыИнтеграции(МассивИнтеграций);
	
	Возврат ИсходныйКод;

КонецФункции

&НаКлиенте
Процедура ФункционалПриНачалеРедактирования(Элемент, НоваяСтрока, Копирование)
	
	Если НоваяСтрока И Не Копирование Тогда

        Элемент.ТекущиеДанные.СтатусИнтеграции = ПредопределенноеЗначение("Перечисление.СтатусыИнтеграции.Проект");
        Элемент.ТекущиеДанные.Описание = "";
		
    КонецЕсли;

	
КонецПроцедуры

#КонецОбласти
