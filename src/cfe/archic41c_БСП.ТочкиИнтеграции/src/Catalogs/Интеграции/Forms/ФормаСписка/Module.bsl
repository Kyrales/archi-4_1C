
#Область ОбработчикиСобытийФормы

&НаСервере
Процедура ПриСозданииНаСервере(Отказ, СтандартнаяОбработка)
	
	ТИ_ОбщегоНазначения.ПриСозданииНаСервереФормыВыбора(ЭтотОбъект, Отказ, СтандартнаяОбработка);
	
КонецПроцедуры

&НаКлиенте
Процедура ПриОткрытии(Отказ)
	
	ПараметрыОтбора = Новый Соответствие();
	ПараметрыОтбора.Вставить("ПоказыватьВсеИнтеграции", ПоказыватьВсеИнтеграции);	
	УстановитьОтборСписка(Список, ПараметрыОтбора);	
	
КонецПроцедуры

&НаСервере
Процедура ПриЗагрузкеДанныхИзНастроекНаСервере(Настройки)
	
	УстановитьОтборСписка(Список, Настройки);
	
КонецПроцедуры

#КонецОбласти

#Область ОбработчикиСобытийЭлементовШапкиФормы

&НаКлиенте
Процедура ПоказыватьВсеИнтеграцииПриИзменении(Элемент)
	
	УстановитьОтборНаКлиенте();	
	
КонецПроцедуры

&НаКлиенте
Процедура ИнформационнаяСистемаПриИзменении(Элемент)
	
	ПараметрыОтбора = Новый Соответствие;
	ПараметрыОтбора.Вставить("ИнформационнаяСистема", ИнформационнаяСистема);
	
	УстановитьОтборСписка(Список, ПараметрыОтбора);

КонецПроцедуры

&НаКлиенте
Процедура ИнформационнаяСистема2ПриИзменении(Элемент)
	
	ПараметрыОтбора = Новый Соответствие;
	ПараметрыОтбора.Вставить("ИнформационнаяСистема2", ИнформационнаяСистема2);
	
	УстановитьОтборСписка(Список, ПараметрыОтбора);
	
КонецПроцедуры

#КонецОбласти

#Область СлужебныеПроцедурыИФункции

&НаКлиенте
Процедура УстановитьОтборНаКлиенте()
	
	ПараметрыОтбора = Новый Соответствие();
	ПараметрыОтбора.Вставить("ПоказыватьВсеИнтеграции", ПоказыватьВсеИнтеграции);	
	УстановитьОтборСписка(Список, ПараметрыОтбора);	
	
КонецПроцедуры

&НаКлиентеНаСервереБезКонтекста
Процедура УстановитьОтборСписка(Список, ПараметрыОтбора)
	
	// показывать все сертификаты
	ПоказыватьВсеИнтеграции = ПараметрыОтбора.Получить("ПоказыватьВсеИнтеграции");
	Если ПоказыватьВсеИнтеграции <> Неопределено Тогда
		ОбщегоНазначенияКлиентСервер.УдалитьЭлементыГруппыОтбора(Список.Отбор, "Актуален");
		Если Не ПараметрыОтбора["ПоказыватьВсеИнтеграции"] Тогда
			ОбщегоНазначенияКлиентСервер.УстановитьЭлементОтбора(
				Список.Отбор, "Актуален", Истина);
		КонецЕсли;
	КонецЕсли;
	
	// ИнформационнаяСистема 
	ИнформационнаяСистема = ПараметрыОтбора.Получить("ИнформационнаяСистема");
	Если ИнформационнаяСистема <> Неопределено Тогда 
		
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ИнформационнаяСистема", 
				ИнформационнаяСистема, ЗначениеЗаполнено(ИнформационнаяСистема));
		
	КонецЕсли;
	
	// ИнформационнаяСистема 2 
	ИнформационнаяСистема2 = ПараметрыОтбора.Получить("ИнформационнаяСистема2");
	Если ИнформационнаяСистема2 <> Неопределено Тогда 
		
		ОбщегоНазначенияКлиентСервер.УстановитьПараметрДинамическогоСписка(Список, "ИнформационнаяСистема2", 
				ИнформационнаяСистема2, ЗначениеЗаполнено(ИнформационнаяСистема2));
			
	КонецЕсли;
	
КонецПроцедуры

&НаСервереБезКонтекста
Функция ГенерацияСхемыC4НаСервере(МассивСсылок)
	
	МассивИнтеграций = Новый Массив;
	Для каждого ТекСтрока Из МассивСсылок Цикл
	
		ПараметрыИнтеграции = ТочкиИнтеграцииМоделиС4.ПараметрыДиаграммыИнтеграции();
		ЗаполнитьЗначенияСвойств(ПараметрыИнтеграции, ТекСтрока, "Источник, Приемник");
		ПараметрыИнтеграции.Ссылка = ТекСтрока;
		
		СписокТочекИнтеграции = ТекСтрока.СписокТочекИнтеграции.Выгрузить();
		ПараметрыИнтеграции.СписокТочекИнтеграции = СписокТочекИнтеграции;
		
		МассивИнтеграций.Добавить(ПараметрыИнтеграции);
	
	КонецЦикла;
	
	ИсходныйКод = ТочкиИнтеграцииМоделиС4.СформироватьКодДиаграммыИнтеграции(МассивИнтеграций);
	
	Возврат ИсходныйКод;
	
КонецФункции

&НаКлиенте
Процедура ГенерацияСхемыC4(Команда)
	
	МассивСсылок = Новый Массив;
	
	Если Элементы.Список.ТекущиеДанные <> Неопределено  Тогда 
		Для каждого ТекСтрока Из Элементы.Список.ВыделенныеСтроки Цикл
			
			МассивСсылок.Добавить(ТекСтрока);
			
		КонецЦикла;
	КонецЕсли;
	
	ИсходныйКод = ГенерацияСхемыC4НаСервере(МассивСсылок);
	
	ПараметрыФормы = Новый Структура("ИсходныйКод, СразуСформировать", ИсходныйКод, Истина);
	
	ОткрытьФорму("Обработка.ГенерацияUMLДиаграмм.Форма.Форма", ПараметрыФормы, ЭтотОбъект);
	
КонецПроцедуры

#КонецОбласти
